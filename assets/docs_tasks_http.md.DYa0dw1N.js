import{_ as e,c as t,o,a4 as a}from"./chunks/framework.ttppV29E.js";const _=JSON.parse('{"title":"HTTP Tasks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/tasks/http.md","filePath":"docs/tasks/http.md","lastUpdated":1758110808000}'),s={name:"docs/tasks/http.md"},d=a('<h1 id="http-tasks" tabindex="-1">HTTP Tasks <a class="header-anchor" href="#http-tasks" aria-label="Permalink to &quot;HTTP Tasks&quot;">â€‹</a></h1><p>When it is created, an HTTP task makes a <code>POST</code> request to the url set in the <code>Url</code> field.</p><p>The <code>Body</code> of this request can be formed to include data and match any required shape for the receipient endpoint. The request&#39;s <code>Content Type</code> will default to <code>text/plain</code>, however you can override this using the <code>Content Type</code> field. There is an option to include multiple headers in your request using the <code>Headers</code> section using key-value pairs. One thing to note is that if you were to add a Content-Type header in this <code>Headers</code> section it will override any value set in the explicit <code>Content Type</code> field.</p><p>All of these fields can make use of both <a href="./../workflows//mapping.html">XPath and Liquid</a> apart from the <code>Key</code> field of any <code>Headers</code>. Finally, you have the option to set <code>Retry on Failure</code> to either <code>Yes</code> or <code>No</code>. If the request fails for whatever reason and this value is set to <code>Yes</code> then the request will be sent again a number of times before eventually setting the event status to <code>Failed</code>.</p>',4),i=[d];function n(c,r,h,l,p,u){return o(),t("div",null,i)}const T=e(s,[["render",n]]);export{_ as __pageData,T as default};
