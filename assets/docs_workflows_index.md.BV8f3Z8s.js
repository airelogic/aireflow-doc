import{_ as e,c as a,o as t,a4 as o}from"./chunks/framework.ttppV29E.js";const p=JSON.parse('{"title":"Workflow Definitions","description":"","frontmatter":{},"headers":[],"relativePath":"docs/workflows/index.md","filePath":"docs/workflows/index.md","lastUpdated":1748522454000}'),i={name:"docs/workflows/index.md"},s=o('<h1 id="workflow-definitions" tabindex="-1">Workflow Definitions <a class="header-anchor" href="#workflow-definitions" aria-label="Permalink to &quot;Workflow Definitions&quot;">​</a></h1><h2 id="what-is-a-workflow-definition" tabindex="-1">What is a Workflow Definition? <a class="header-anchor" href="#what-is-a-workflow-definition" aria-label="Permalink to &quot;What is a Workflow Definition?&quot;">​</a></h2><p>A workflow definition is a collection of task definitions that need to be tracked against a specific <code>Subject</code> and performed by the same logical team. A workflow definition may contain every task related to a workflow, or may represent a smaller workflow in the context of a wider workflow (i.e. you may choose to break up a large workflow into multiple workflow definitions).</p><h2 id="what-is-a-task-definition" tabindex="-1">What is a Task Definition? <a class="header-anchor" href="#what-is-a-task-definition" aria-label="Permalink to &quot;What is a Task Definition?&quot;">​</a></h2><p>A task definition is a template of an actionable output from a Workflow that requires completion by a user or automated system in order to fulfill the workflow requirements.</p><p>All tasks will have a required <code>Name</code>, <code>Key</code>, and <code>Task Type</code>. You will also have the option to enter an <code>Owner</code> and <code>Owner Type</code>. If the type is <code>Manual</code> you will also have the option to enter a <code>Description</code> and <code>Assignee</code>. If included, the <code>Assignee</code> should reference a specific user.</p><p>The task definition describes triggers and mutations which will create or update a task instance.</p><h3 id="task-keys" tabindex="-1">Task Keys <a class="header-anchor" href="#task-keys" aria-label="Permalink to &quot;Task Keys&quot;">​</a></h3><p>Each task definition has a key. See <a href="./task-keys.html">Task Keys</a> for more.</p><h3 id="task-types" tabindex="-1">Task Types <a class="header-anchor" href="#task-types" aria-label="Permalink to &quot;Task Types&quot;">​</a></h3><p>Each task definition has a task type. See <a href="./task-types.html">Task Types</a> for more.</p><h3 id="state" tabindex="-1">State <a class="header-anchor" href="#state" aria-label="Permalink to &quot;State&quot;">​</a></h3><p>State can be added to a task to provide users the ability to add more details when completing tasks. It takes the form of a set of Kay-Value pairs, with the option of setting a default value when the task is created. This is primarily useful for containing systems that integrate with AireFlow.</p><h3 id="filters" tabindex="-1">Filters <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;Filters&quot;">​</a></h3><p>Filters can be added to tasks to determine if the task should be created. These should be an <a href="./mapping.html">XPath</a> expression that results in either <code>true</code> (if the task should be created) or <code>false</code> (if it shouldn&#39;t).</p><h3 id="due-dates" tabindex="-1">Due dates <a class="header-anchor" href="#due-dates" aria-label="Permalink to &quot;Due dates&quot;">​</a></h3><p>Each task definition can have an associated due date that can be set to it. See <a href="./task-due-date.html">Task Due Date</a> for more.</p><h3 id="exclusive" tabindex="-1">Exclusive <a class="header-anchor" href="#exclusive" aria-label="Permalink to &quot;Exclusive&quot;">​</a></h3><p>If a task has exclusive set to true, then only one instance of that task will be created for each unique pair of subject ID and correlation ID. Completed tasks are included in that, so even once a task has been finished, no more instances of that task will be created for that combination of subject ID and correlation ID. Changing either or both of the subject/correlation ID will result in another task instance being created.</p><p>When exclusive is false, a task instances will be created every time it is triggered, regardless of whether there are existing instances.</p>',20),n=[s];function r(d,l,h,c,f,k){return t(),a("div",null,n)}const w=e(i,[["render",r]]);export{p as __pageData,w as default};
