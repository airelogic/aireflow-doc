import{_ as e,c as a,j as i,a as t,t as n,a4 as s,o as h}from"./chunks/framework.ttppV29E.js";const C=JSON.parse('{"title":"Task Due Date","description":"","frontmatter":{},"headers":[],"relativePath":"docs/workflows/task-due-date.md","filePath":"docs/workflows/task-due-date.md","lastUpdated":1747209696000}'),l={name:"docs/workflows/task-due-date.md"},d=s('<h1 id="task-due-date" tabindex="-1">Task Due Date <a class="header-anchor" href="#task-due-date" aria-label="Permalink to &quot;Task Due Date&quot;">​</a></h1><p>Within a workflow definition, a task definition can be given with a due date. The due date takes the form of a liquid expression enclosed within <code>{{ }}</code> and are evaluated upon the task&#39;s instantiation. <a href="./mapping.html">More details about liquid available here</a>. The due dates are presented in two views which supports furnishing the information.</p><h2 id="ui-view" tabindex="-1">UI view <a class="header-anchor" href="#ui-view" aria-label="Permalink to &quot;UI view&quot;">​</a></h2><p>The UI view consists of input fields to capture the base date and then additional options to increments or round up to a desired date/time. It provides the following option</p><ul><li>The first row of fields support specifying the base date. It can be specified as &quot;now&quot; which would be the date/time when the task gets instantiated. The other option is to specify a date/time the user prefers.</li><li>The second row of fields provides options to supply increments by months, weeks, days, hours and minutes.</li><li>The third row of field provides options to rounding to the next month, weekday, hour or a day of the week.</li></ul><p>To note:</p><ul><li>When the task gets instantiated, the due date is derived by first applying any increments to the base date and secondly by applying the rounding.</li><li>If multiple rounding options are selected, they are applied in the order in which they were selected.</li></ul><h2 id="code-view" tabindex="-1">Code view <a class="header-anchor" href="#code-view" aria-label="Permalink to &quot;Code view&quot;">​</a></h2><p>The Code view is an alternative view to express the selection that was done in the UI view and to also customize or apply a more advanced configuration that can be done using the UI view.</p><p>To note:</p>',10),o=i("li",null,'If a fixed date/time is required, it can be specified in the format "YYYY-MM-DDTHH:mm:ss" or "YYYY-MM-DD HH:mm:ss" (without the time separator)',-1),p=i("li",null,"When the liquid expression gets modified, the system tries to refresh the UI view according to the changes. If unsuccessful, it disables the UI view.",-1),r=i("li",null,"The custom liquid filter to increment is plus_time and comes with named arguments and their corresponding values. One filter can be used to specify multiple options.",-1),k=i("li",null,"The custom liquid filter to applying rounding is round_to_next and can only one value at a time. Hence separate filters are to be used to specify multiple options in the desired order.",-1),u=s(`<p>Some example expressions are as follows:</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;now&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">round_to_next:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;weekday&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;today&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">round_to_next:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SUNDAY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2020-10-05T12:34:56.0000000Z&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plus_time:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> months:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">days:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hours:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2020-10-05 12:34:56&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plus_time:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> days:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">months:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hours:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">round_to_next:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;weekday&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div><h2 id="changing-due-date-using-a-mutation" tabindex="-1">Changing due date using a mutation <a class="header-anchor" href="#changing-due-date-using-a-mutation" aria-label="Permalink to &quot;Changing due date using a mutation&quot;">​</a></h2><p>Due dates can also be updated in a mutation, either using the same kind of expression as described above, or by adding time to the current due date.</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ task.ActivityContext.Due | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plus_time:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hours:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div>`,5);function c(g,E,y,m,F,f){return h(),a("div",null,[d,i("ul",null,[i("li",null,[t("The due date expression takes the form of a liquid expression enclosed within "),i("code",null,n(),1)]),o,p,r,k]),u])}const w=e(l,[["render",c]]);export{C as __pageData,w as default};
