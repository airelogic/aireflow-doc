import{_ as e,c as t,o as a,a4 as o}from"./chunks/framework.ttppV29E.js";const k=JSON.parse('{"title":"Form Tasks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/tasks/form.md","filePath":"docs/tasks/form.md","lastUpdated":1755504235000}'),s={name:"docs/tasks/form.md"},n=o('<h1 id="form-tasks" tabindex="-1">Form Tasks <a class="header-anchor" href="#form-tasks" aria-label="Permalink to &quot;Form Tasks&quot;">​</a></h1><p>The <code>Form</code> task type has some unique funcitonality and is closely linked to the Form Instance API. For this task you must supply a form key and you can optionally add the form version. If this version is left empty then the latest form version will be used. You can also specify the instance ID of an existing form in the workflow definition, to link a form task to an exsiting form. If a form task is created with an instance ID already set, it will skip the &#39;New&quot; status and be created as <code>In Progress</code>.</p><p>When this task moves from <code>New</code> to <code>In Progress</code> a call will be made to create a new form instance using the form key and version supplied. If the form is successfully created, the <code>Form Instance Id</code> will be added to the task, otherwise the status will remain as <code>New</code>. The <code>instanceId</code> can be pulled back using GraphQL for the form task type. If you have the <code>Owner</code> and <code>OwnerType</code> properties set for this task then these will be used during the form creation as the <code>OnBehalfOf</code> user. Once the task is <code>In Progress</code>, it can either move to <code>Completed</code> or it can also be <code>Cancelled</code>.</p><p>If the task is <code>Cancelled</code> then a call will be made to withdraw the form instance. Again, if this withdraw call fails then the status will remain as <code>In Progress</code>. You are also able to set the Form task as <code>Cancelled</code> when in a <code>New</code> state if you no longer require the task, this will prevent users from being able to create a form instance under this task.</p><h2 id="complete-task-on-form-submission" tabindex="-1">Complete Task on Form Submission <a class="header-anchor" href="#complete-task-on-form-submission" aria-label="Permalink to &quot;Complete Task on Form Submission&quot;">​</a></h2><p>Use this setting on a form task definition to make the task status automatically change to complete when the linked form is submitted. The subject ID, correlation ID and form instance ID must match the submitted form for this to work.</p><h2 id="cancel-task-on-form-withdrawal" tabindex="-1">Cancel Task on Form Withdrawal <a class="header-anchor" href="#cancel-task-on-form-withdrawal" aria-label="Permalink to &quot;Cancel Task on Form Withdrawal&quot;">​</a></h2><p>Similar to the auto complete setting, use this setting to make the task status automatically change to cancelled when the linked form is withdrawn. The subject ID, correlation ID and form instance ID must match the withdrawn form for this to work.</p><h2 id="return-status-to-new-on-form-deletion" tabindex="-1">Return Status to New on Form Deletion <a class="header-anchor" href="#return-status-to-new-on-form-deletion" aria-label="Permalink to &quot;Return Status to New on Form Deletion&quot;">​</a></h2><p>Similar to the auto complete setting, use this setting to automatically set the status of this task back to new when the linked form is deleted. Only forms that have not been submitted can be deleted. The subject ID, correlation ID and form instance ID must match the withdrawn form for this to work.</p><h2 id="linking-a-form-task" tabindex="-1">Linking a Form Task <a class="header-anchor" href="#linking-a-form-task" aria-label="Permalink to &quot;Linking a Form Task&quot;">​</a></h2><p>If you want to link a form task to a form when a form instance is created, you should add a trigger using the <a href="./../events/aireforms.html">Form Instance Created</a> event. You can then set the Form Instance ID for that task using a liquid expression like this:</p><div class="language-liquid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">liquid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ context.FormInstanceCreated.instanceGuid }}</span></span></code></pre></div>',13),i=[n];function r(c,l,d,h,m,u){return a(),t("div",null,i)}const p=e(s,[["render",r]]);export{k as __pageData,p as default};
