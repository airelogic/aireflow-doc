import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.ttppV29E.js";const o="/assets/barchart.Db4_Z25C.png",r="/assets/piechart.BjF7SI8D.png",i="/assets/tasks.Dtr96rBN.png",h="/assets/datefilters.BLkR8iUw.png",l="/assets/searchfilter.BEw_ZrPC.png",y=JSON.parse('{"title":"Metrics","description":"","frontmatter":{},"headers":[],"relativePath":"docs/metrics/index.md","filePath":"docs/metrics/index.md","lastUpdated":1751010629000}'),n={name:"docs/metrics/index.md"},c=s('<h1 id="metrics" tabindex="-1">Metrics <a class="header-anchor" href="#metrics" aria-label="Permalink to &quot;Metrics&quot;">​</a></h1><h2 id="what-is-the-metrics-page" tabindex="-1">What is the Metrics page? <a class="header-anchor" href="#what-is-the-metrics-page" aria-label="Permalink to &quot;What is the Metrics page?&quot;">​</a></h2><p>This page allows users to better understand operational usage by providing an overview of the operational state of AireFlow. This can be useful in a number of ways, including better understanding whether a workflow can be retired and seeing a summary of the number of tasks for a particular workflow at a glance.</p><h2 id="charts" tabindex="-1">Charts <a class="header-anchor" href="#charts" aria-label="Permalink to &quot;Charts&quot;">​</a></h2><p>One of the charts displayed on this page includes a bar chart which is split up by workflow and then by the number of tasks for each status. Hovering over the graph will provide some further information including the full worklow key and a list of the status counts. The results shown in the bar chart will change depending on the search filter and date filters applied.</p><p><img src="'+o+'" alt="Workflow task counts by status bar chart"></p><p>Secondly, there is a pie chart which shows a breakdown of all the task statuses across every workflow. If you hover over the pie chart you will see the actual number of tasks for that particular status. Again, this chart will be impacted by the filters selected at the top of the page.</p><p><img src="'+r+'" alt="Task counts by status pie chart"></p><h2 id="workflow-task-counts-table" tabindex="-1">Workflow Task Counts Table <a class="header-anchor" href="#workflow-task-counts-table" aria-label="Permalink to &quot;Workflow Task Counts Table&quot;">​</a></h2><p>This table shows a list of workflows with tasks that have been updated within the date range supplied by the date filter. The <code>Last Activity</code> column displays the date and time that the task was last updated. Each status column will display the number of tasks with that status for the associated workflow.</p><p>Provided you have the right access level, there may be an expand icon on the right hand side which allows you to view further task details.</p><p><img src="'+i+'" alt="Exapanded workflow row showing tasks"></p><p>Here you can click on the status buttons to filter the list to one or more statuses so that only those tasks are displayed in the view. You can also make amendments to tasks in the same way you can on the Tasks page</p><p>The final row in the workflow task counts table is the <code>Totals</code> row which shows the sum of each status in the list. This is impacted by the filters you supply.</p><h2 id="filters" tabindex="-1">Filters <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;Filters&quot;">​</a></h2><p>When loading the page, the default filter applied is to only display the tasks that have been created/updated within the past week. However, if you want to amend the date filter you can click on the date filter box and a dialog will appear. Here you will be able to select some of the pre-set options e.g. 1 hour, 24 hours, 30 days or have more fine grained control by selecting the start and/or end date fields.</p><p><img src="'+h+'" alt="Date filter dialog"></p><p>Another way to filter the results is with the search box, here you can begin typing in a desired workflow key or last activity date. Any results matching/partially matching this value will appear in the charts and table.</p><p><img src="'+l+'" alt="Search filter applied"></p>',19),d=[c];function p(u,f,w,m,b,k){return a(),t("div",null,d)}const _=e(n,[["render",p]]);export{y as __pageData,_ as default};
