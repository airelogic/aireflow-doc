import{_ as s,c as n,o as a,a4 as t}from"./chunks/framework.ttppV29E.js";const g=JSON.parse('{"title":"GraphQL API Definition","description":"","frontmatter":{},"headers":[],"relativePath":"docs/graphql/index.md","filePath":"docs/graphql/index.md","lastUpdated":1751641097000}'),e={name:"docs/graphql/index.md"},l=t(`<h1 id="graphql-api-definition" tabindex="-1">GraphQL API Definition <a class="header-anchor" href="#graphql-api-definition" aria-label="Permalink to &quot;GraphQL API Definition&quot;">​</a></h1><p>The following document outlines the AireFlow GraphQL API, available at <code>/api/graphql/v2</code>.</p><h2 id="tasks" tabindex="-1">Tasks <a class="header-anchor" href="#tasks" aria-label="Permalink to &quot;Tasks&quot;">​</a></h2><p>The tasks query can be used to read all instantiated tasks. There are currently no mutations available via GraphQL and any changes will need to be made via the REST API.</p><h3 id="query-structure" tabindex="-1">Query Structure <a class="header-anchor" href="#query-structure" aria-label="Permalink to &quot;Query Structure&quot;">​</a></h3><p>The following properties can be retrieved via the GraphQL API</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>query {</span></span>
<span class="line"><span>    tasks {</span></span>
<span class="line"><span>        pageCount</span></span>
<span class="line"><span>        nodes {</span></span>
<span class="line"><span>            id</span></span>
<span class="line"><span>            taskKey</span></span>
<span class="line"><span>            name</span></span>
<span class="line"><span>            description</span></span>
<span class="line"><span>            taskType</span></span>
<span class="line"><span>            subjectId</span></span>
<span class="line"><span>            correlationId</span></span>
<span class="line"><span>            assigneeId</span></span>
<span class="line"><span>            assigneeType</span></span>
<span class="line"><span>            owner</span></span>
<span class="line"><span>            ownerType</span></span>
<span class="line"><span>            workflowDefinitionVersion</span></span>
<span class="line"><span>            workflowDefinitionId</span></span>
<span class="line"><span>            filters</span></span>
<span class="line"><span>            context</span></span>
<span class="line"><span>            created</span></span>
<span class="line"><span>            updated</span></span>
<span class="line"><span>            lastRun</span></span>
<span class="line"><span>            activityContext {</span></span>
<span class="line"><span>                status</span></span>
<span class="line"><span>                ...on ManualActivityContext {</span></span>
<span class="line"><span>                    due</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>                ...on EmailActivityContext {</span></span>
<span class="line"><span>                    to</span></span>
<span class="line"><span>                    subject</span></span>
<span class="line"><span>                    body</span></span>
<span class="line"><span>                    retryCount</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>                ...on HttpActivityContext {</span></span>
<span class="line"><span>                    url</span></span>
<span class="line"><span>                    body</span></span>
<span class="line"><span>                    contentType</span></span>
<span class="line"><span>                    headers</span></span>
<span class="line"><span>                    retryCount</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>                ...on AireFrameCreateFormActivityContext {</span></span>
<span class="line"><span>                    key</span></span>
<span class="line"><span>                    version</span></span>
<span class="line"><span>                    subjectId</span></span>
<span class="line"><span>                    userId</span></span>
<span class="line"><span>                    retryCount</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>                ...on PublishEventActivityContext {</span></span>
<span class="line"><span>                    eventKey</span></span>
<span class="line"><span>                    retryCount</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>                ...on FormActivityContext {</span></span>
<span class="line"><span>                    key</span></span>
<span class="line"><span>                    version</span></span>
<span class="line"><span>                    instanceId</span></span>
<span class="line"><span>                    due</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>            state {</span></span>
<span class="line"><span>                key</span></span>
<span class="line"><span>                value</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="filtering" tabindex="-1">Filtering <a class="header-anchor" href="#filtering" aria-label="Permalink to &quot;Filtering&quot;">​</a></h3><p>The filter parameter is used as follows. Each item in the filter array must be true for a task to be included in the result:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>query {</span></span>
<span class="line"><span>    tasks (</span></span>
<span class="line"><span>        filter:[{</span></span>
<span class="line"><span>            property: &quot;activityContext.status&quot;</span></span>
<span class="line"><span>            condition: EQ</span></span>
<span class="line"><span>            value: [&quot;New&quot;, &quot;InProgress&quot;]</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>            property: &quot;assigneeId&quot;</span></span>
<span class="line"><span>            condition: EQ</span></span>
<span class="line"><span>            value: &quot;1&quot;</span></span>
<span class="line"><span>    },    </span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>            property: &quot;assigneeType&quot;</span></span>
<span class="line"><span>            condition: EQ</span></span>
<span class="line"><span>            value: &quot;Subject&quot;</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>            property: &quot;state[comments]&quot;</span></span>
<span class="line"><span>            condition: INCLUDES</span></span>
<span class="line"><span>            value: &quot;Some Comment&quot;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    ]) {</span></span>
<span class="line"><span>        ...</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>Where <em>property</em> is the name of the property to filter, <em>condition</em> defines what type of filter is applied and <em>value</em> is the value the condition is checked against. The value can be a string or an array of strings (in some cases). In the above example, the status must be either new or in progress, the assigneeId must be 1 and there is a state item called &quot;comments&quot; who&#39;s value includes the substring &quot;Some Comment&quot;.</p><p>In order to access a nested property, separate them using a &#39;.&#39; as above.</p><p>For dictionaries, use <code>{property}.key</code> to filter on the keys, use <code>{property}[{key name}]</code> to filter on the value of a specific key.</p><h4 id="types-of-filter" tabindex="-1">Types of Filter <a class="header-anchor" href="#types-of-filter" aria-label="Permalink to &quot;Types of Filter&quot;">​</a></h4><p>Each property type has a subset of valid conditions listed here.</p><table><thead><tr><th style="text-align:left;">Property Type</th><th style="text-align:left;">Valid Conditions</th><th style="text-align:left;">Accepts Array Value</th><th style="text-align:left;">True When</th></tr></thead><tbody><tr><td style="text-align:left;">string</td><td style="text-align:left;">EQ</td><td style="text-align:left;">True</td><td style="text-align:left;">Property value equals one of the input values (Case-Sensitive)</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">NOT</td><td style="text-align:left;">True</td><td style="text-align:left;">Property value does not equal one of the input values (Case-Sensitive)</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">INCLUDES</td><td style="text-align:left;">True</td><td style="text-align:left;">One of the input values is a substring of the property value (Case-Sensitive)</td></tr><tr><td style="text-align:left;">DateTime</td><td style="text-align:left;">LT</td><td style="text-align:left;">False</td><td style="text-align:left;">Property value is before than the input value</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">GT</td><td style="text-align:left;">False</td><td style="text-align:left;">Property value is after the input value</td></tr><tr><td style="text-align:left;">Int</td><td style="text-align:left;">EQ</td><td style="text-align:left;">False</td><td style="text-align:left;">Property value is equal to the input value</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">GT</td><td style="text-align:left;">False</td><td style="text-align:left;">Property value is greater than the input value</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">LT</td><td style="text-align:left;">False</td><td style="text-align:left;">Property value is less than the input value</td></tr><tr><td style="text-align:left;">List</td><td style="text-align:left;">AnyEq</td><td style="text-align:left;">False</td><td style="text-align:left;">Property list contains the input value</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">NoneEq</td><td style="text-align:left;">False</td><td style="text-align:left;">Property list does not contain the input value</td></tr><tr><td style="text-align:left;">Enum</td><td style="text-align:left;">EQ</td><td style="text-align:left;">True</td><td style="text-align:left;">Property value equals one of the input values</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">NOT</td><td style="text-align:left;">True</td><td style="text-align:left;">Property value does not equal one of the input values</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">INCLUDES</td><td style="text-align:left;">True</td><td style="text-align:left;">One of the input values is a substring of the property value</td></tr><tr><td style="text-align:left;">Dictionary Key</td><td style="text-align:left;">AnyEq</td><td style="text-align:left;">True</td><td style="text-align:left;">Input value is a key in the dictionary</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">NoneEq</td><td style="text-align:left;">True</td><td style="text-align:left;">Input value is not a key in the dictionary</td></tr><tr><td style="text-align:left;">Dictionary Value</td><td style="text-align:left;">EQ</td><td style="text-align:left;">True</td><td style="text-align:left;">Property value equals one of the input values (Case-Sensitive)</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">NOT</td><td style="text-align:left;">True</td><td style="text-align:left;">Property value does not equal one of the input values (Case-Sensitive)</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">INCLUDES</td><td style="text-align:left;">True</td><td style="text-align:left;">One of the input values is a substring of the property value (Case-Sensitive)</td></tr></tbody></table><h3 id="sorting" tabindex="-1">Sorting <a class="header-anchor" href="#sorting" aria-label="Permalink to &quot;Sorting&quot;">​</a></h3><p>The sorting parameter is used as follows. The direction is either ASCENDING or DESCENDING.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>query {</span></span>
<span class="line"><span>    tasks (</span></span>
<span class="line"><span>        sort: {</span></span>
<span class="line"><span>            property: &quot;activityContext.due&quot;</span></span>
<span class="line"><span>            direction: ASCENDING</span></span>
<span class="line"><span>    }) {</span></span>
<span class="line"><span>        ...</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="paging" tabindex="-1">Paging <a class="header-anchor" href="#paging" aria-label="Permalink to &quot;Paging&quot;">​</a></h3><p>The paging parameter is used as follows.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>query {</span></span>
<span class="line"><span>    tasks (</span></span>
<span class="line"><span>        paging: {</span></span>
<span class="line"><span>            pageNumber: 1,</span></span>
<span class="line"><span>            pageSize: 50</span></span>
<span class="line"><span>    }) {</span></span>
<span class="line"><span>        ...</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,22),p=[l];function i(r,o,d,c,u,y){return a(),n("div",null,p)}const f=s(e,[["render",i]]);export{g as __pageData,f as default};
