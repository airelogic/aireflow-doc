import{_ as t,c as e,o,a4 as a}from"./chunks/framework.ttppV29E.js";const g=JSON.parse('{"title":"SMTP","description":"","frontmatter":{},"headers":[],"relativePath":"docs/configuration/smtp.md","filePath":"docs/configuration/smtp.md","lastUpdated":1755004804000}'),l={name:"docs/configuration/smtp.md"},r=a('<h1 id="smtp" tabindex="-1">SMTP <a class="header-anchor" href="#smtp" aria-label="Permalink to &quot;SMTP&quot;">​</a></h1><p>If necessary each tenant can override SMTP configuration to use a different SMTP server to send emails from their email tasks. Using variables and secrets in AireVault combined with appropriates scopes, it&#39;s even possible to specify different SMTP settings for each workflow definition version.</p><h2 id="how-do-i-override-the-smtp-configuration-for-my-tenant" tabindex="-1">How do I override the SMTP configuration for my tenant? <a class="header-anchor" href="#how-do-i-override-the-smtp-configuration-for-my-tenant" aria-label="Permalink to &quot;How do I override the SMTP configuration for my tenant?&quot;">​</a></h2><p>Create whichever of the following variables and secrets you require in <a href="https://vault.aireinnovate.com/swagger/index.html" target="_blank" rel="noreferrer">AireVault</a></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">SmtpHost</td><td style="text-align:left;">Variable</td><td style="text-align:left;">The host of your SMTP server, e.g. smtp.gmail.com</td></tr><tr><td style="text-align:left;">SmtpPort</td><td style="text-align:left;">Variable</td><td style="text-align:left;">Which port to connect on, defaults to 465</td></tr><tr><td style="text-align:left;">SmtpUsername</td><td style="text-align:left;">Variable</td><td style="text-align:left;">The username for your SMTP server, e.g. <a href="mailto:john@example.com" target="_blank" rel="noreferrer">john@example.com</a></td></tr><tr><td style="text-align:left;">SmtpPassword</td><td style="text-align:left;"><strong>Secret</strong></td><td style="text-align:left;">The password for your SMTP server. This must be a secret, not a variable.</td></tr><tr><td style="text-align:left;">SmtpUseSsl</td><td style="text-align:left;">Variable</td><td style="text-align:left;">Whether to connect using SSL, defaults to <code>true</code></td></tr><tr><td style="text-align:left;">SmtpDefaultFrom</td><td style="text-align:left;">Variable</td><td style="text-align:left;">The default sending email address, e.g. <a href="mailto:bob@example.com" target="_blank" rel="noreferrer">bob@example.com</a></td></tr></tbody></table><h2 id="how-do-i-override-the-smtp-configuration-for-a-specific-workflow" tabindex="-1">How do I override the SMTP configuration for a specific workflow? <a class="header-anchor" href="#how-do-i-override-the-smtp-configuration-for-a-specific-workflow" aria-label="Permalink to &quot;How do I override the SMTP configuration for a specific workflow?&quot;">​</a></h2><p>Using AireVault scopes, you can set different values for each of the above settings down to a workflow definition version level. See some examples below.</p><table><thead><tr><th style="text-align:left;">Scope</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><em>empty</em></td><td style="text-align:left;">Providing an empty scope will use the value by default for all products that support overriding SMTP config with Vault, unless a more specific scope is found</td></tr><tr><td style="text-align:left;"><code>flow</code></td><td style="text-align:left;">The value will be used by default by AireFlow only</td></tr><tr><td style="text-align:left;"><code>flow:my-workflow-key</code></td><td style="text-align:left;">All versions of the workflow with key <code>my-workflow-key</code> will use this value</td></tr><tr><td style="text-align:left;"><code>flow:my-workflow-key:2</code></td><td style="text-align:left;">Only version 2 of the workflow will use this value</td></tr></tbody></table>',8),i=[r];function s(n,d,f,c,h,m){return o(),e("div",null,i)}const y=t(l,[["render",s]]);export{g as __pageData,y as default};
